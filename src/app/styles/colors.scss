@use "@angular/material" as mat;

// Map Angular Material roles â†’ simplified CSS variables (no `-color`)
$mat-color-roles: (
  primary: var(--mat-sys-primary),
  on-primary: var(--mat-sys-on-primary),
  primary-container: var(--mat-sys-primary-container),
  on-primary-container: var(--mat-sys-on-primary-container),
  secondary: var(--mat-sys-secondary),
  on-secondary: var(--mat-sys-on-secondary),
  secondary-container: var(--mat-sys-secondary-container),
  on-secondary-container: var(--mat-sys-on-secondary-container),
  tertiary: var(--mat-sys-tertiary),
  on-tertiary: var(--mat-sys-on-tertiary),
  tertiary-container: var(--mat-sys-tertiary-container),
  on-tertiary-container: var(--mat-sys-on-tertiary-container),
  error: var(--mat-sys-error),
  on-error: var(--mat-sys-on-error),
  error-container: var(--mat-sys-error-container),
  on-error-container: var(--mat-sys-on-error-container),
  surface: var(--mat-sys-surface),
  on-surface: var(--mat-sys-on-surface),
  surface-variant: var(--mat-sys-surface-variant),
  on-surface-variant: var(--mat-sys-on-surface-variant),
  background: var(--mat-sys-background),
  on-background: var(--mat-sys-on-background),
  outline: var(--mat-sys-outline),
  outline-variant: var(--mat-sys-outline-variant),
  shadow: var(--mat-sys-shadow),
  scrim: var(--mat-sys-scrim),
  inverse-surface: var(--mat-sys-inverse-surface),
  inverse-on-surface: var(--mat-sys-inverse-on-surface),
  inverse-primary: var(--mat-sys-inverse-primary),
);

// Generate text + background utilities
@each $role, $value in $mat-color-roles {
  .text-#{$role} {
    color: #{$value};
  }
  .bg-#{$role} {
    background-color: #{$value};
  }
}
